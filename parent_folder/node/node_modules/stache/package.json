{
  "name": "stache",
  "description": "mustache templating for your express apps",
  "version": "0.1.0",
  "authors": [
    "Jacob Thornton <@fat>"
  ],
  "keywords": [
    "mustache",
    "express",
    "stache"
  ],
  "main": "./index.js",
  "engines": {
    "node": ">= 0.4.1"
  },
  "dependencies": {
    "mustache": ">= 0.2.3",
    "express": ">= 2.1.0"
  },
  "readme": "Stache\n------\nStache is mustache.js for your node express apps.\n\n![stache](http://f.cl.ly/items/1C3o2G3a121b1W1h0L1o/draft_lens8690031module75775171photo_1261762807mustacheold.jpg)\n\nWhuuuuuut?\n==========\n\nGetting this junk running is SUPER easy! check the deets below...\n\n\nsetting it up\n-------------\n\nfirst...\n\n    npm install stache\n\nNow, when you're configuring your express app, just add this little code in somewhere near the top:\n\n```javascript\napp.set('view engine', 'mustache')\napp.register(\".mustache\", require('stache'));\n```\n\n*BOOOM!* you're all set!\n\n\nhow to actually use it\n----------------------\n\nrender your views with res.render...\n\n```javascript\napp.get('/', function (req, res) {\n  res.render(\"index\", {\n    locals: {\n      title: req.params.what\n    },\n    partials: {\n      heading: '<title>{{title}}</title>'\n    }\n  });\n});\n```\n\nNotice you can pass local vars here as well as partials to your templates.\n\nYou can also use helpers to pass mustache dynamic content!\n\n```javascript\n// helpers\napp.helpers({\n  three: function(){\n    return 1 + 2;\n  }\n});\n\n// dynamicHelpers\napp.dynamicHelpers({\n  page: function(req, res){\n    return req.url;\n  }\n});\n```\n\nReference these just like you would locals:\n\n    You are currently viewing: {{page}}\n\nLayouts\n-------\n\nStache supports layouts! *swaggg!* Which means you can have something like this:\n\n    <!-- layout.mustache -->\n    <html>\n    <head>\n      {{>scripts}}\n    </head>\n    <body>\n      {{{yield}}}\n    </body>\n    </html>\n\nNote: <code>yield</code> is a special local var, which will be replaced automatically by the template you specified with res.render. Alternatively you can use the keyword <code>body</code>.\n\n\nPartials\n--------\n\nLooking at the example above, check out that partial reference for scripts!! If when calling your res.render method you don't explicitly specify a script partial, stache will automatically check your views directory for a script.mustache to load as a partial. Pretty boss huh?\n\n\nWhat? I still don't get it...\n-----------------------------\n\nNo worries player, check the examples folder for a fully functional example.\n\n\nshoutout\n--------\nmajor props to donpark (hbs), bitdrift, and obviously mustache.js",
  "_id": "stache@0.1.0",
  "dist": {
    "shasum": "74c8689101b60383bc85628faa9885569675c163"
  },
  "_from": "stache"
}
